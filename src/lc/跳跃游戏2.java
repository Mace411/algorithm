package lc;

/**
 * 给定一个非负整数数组，你最初位于数组的第一个位置。
 *
 * 数组中的每个元素代表你在该位置可以跳跃的最大长度。
 *
 * 你的目标是使用最少的跳跃次数到达数组的最后一个位置。
 *
 * 示例:
 * 输入: [2,1,1,3,4]
 * 输出: 2
 * 解释: 跳到最后一个位置的最小跳跃数是 2。
 *      从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。
 */
public class 跳跃游戏2 {
    /**
     * 从右往左推，最后一步应该是离最后一个位置最远的且能到达最后位置的点，就是找到左边的最大值，然后在以最大值为终点继续找左边的最大值
     * @param nums
     * @return
     */
    public static int jump(int[] nums) {

        return 0;
    }
}
